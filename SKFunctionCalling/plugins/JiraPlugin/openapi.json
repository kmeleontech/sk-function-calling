{
  "swagger": "2.0",
  "info": {
    "x-ms-deployment-version": "1.0.0",
    "version": "1.0.0",
    "title": "JIRA",
    "description": "JIRA is a software development tool for agile teams to plan, track, and release world-class software. Connecting JIRA issues to the rest of your tools helps break down barriers and unleash the potential of your team.",
    "x-ms-api-annotation": {
      "status": "Production"
    },
    "contact": {
      "name": "Atlassian",
      "url": "https://support.atlassian.com"
    }
  },
  "host": "yourhost.yourdomain.com",
  "basePath": "/rest/api",
  "schemes": ["https"],
  "produces": ["application/json"],
  "paths": {
    "/issue": {
      "post": {
        "summary": "Create a new issue",
        "description": "Creates a new issue in a project on Jira.",
        "operationId": "CreateIssueV2",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Issue details",
            "schema": {
              "type": "object",
              "properties": {
                "fields": {
                  "type": "object",
                  "properties": {
                    "issuetype": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Issue type"
                        }
                      }
                    },
                    "summary": {
                      "type": "string",
                      "description": "Brief description of the issue."
                    },
                    "project": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Project name/Key"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "x-ms-summary": "Issue Id",
                  "description": "Unique identifier of the issue."
                },
                "key": {
                  "type": "string",
                  "x-ms-summary": "Issue Key",
                  "description": "Unique key of the issue."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "CreateIssue",
          "revision": 2
        }
      }
    },
    "/issue/{issueKey}": {
      "get": {
        "summary": "Get issue by key",
        "description": "This operation is used to retrieve the issue object for a given issue Key (vL).",
        "operationId": "GetIssue",
        "parameters": [
          {
            "name": "issueKey",
            "in": "path",
            "description": "Unique Key of the issue.",
            "required": true,
            "x-ms-summary": "Issue Key",
            "type": "string",
            "x-ms-test-value": "TPDND-1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "x-ms-summary": "Issue",
              "properties": {
                "id": {
                  "description": "Unique id of the issue.",
                  "type": "string",
                  "x-ms-summary": "Issue Id",
                  "x-ms-visibility": "advanced"
                },
                "key": {
                  "description": "Unique key of the issue.",
                  "type": "string",
                  "x-ms-summary": "Issue Key",
                  "x-ms-visibility": "advanced"
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "summary": {
                      "type": "string",
                      "x-ms-summary": "Summary",
                      "description": "Title of the issue.",
                      "x-ms-visibility": "important"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "advanced"
      }
    },
    "/issue/{issueKey}/transitions": {
      "post": {
        "summary": "Change issue status",
        "description": "This operation is used to change the issue status",
        "operationId": "doTransition",
        "parameters": [
          {
            "name": "issueKey",
            "in": "path",
            "description": "Unique Key of the issue.",
            "required": true,
            "x-ms-summary": "Issue Key",
            "type": "string",
            "x-ms-test-value": "TPDND-1"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Transition details",
            "schema": {
              "type": "object",
              "properties": {
                "transition": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of the transition"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "x-ms-visibility": "advanced"
      }
    },
    "/search": {
      "post": {
        "summary": "Search for issues using a search parameter called JQL",
        "description": "Searches for issues based on a string called JQL. The JQL is passed as parameter to the search and results are processed as text",
        "operationId": "searchForIssuesUsingJqlPost",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-summary": "Issue",
            "schema": {
              "type": "object",
              "properties": {
                "fields": {
                  "type": "array",
                  "description": "A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:\n\n *  `*all` Returns all fields.\n *  `*navigable` Returns navigable fields.\n *  Any issue field, prefixed with a minus to exclude.\n\nThe default is `*navigable`.\n\nExamples:\n\n *  `summary,comment` Returns the summary and comments fields only.\n *  `-description` Returns all navigable (default) fields except description.\n *  `*all,-comment` Returns all fields except comments.\n\nMultiple `fields` parameters can be included in a request.\n\nNote: All navigable fields are returned by default. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields.",
                  "items": {
                    "type": "string"
                  }
                },
                "jql": {
                  "type": "string",
                  "description": "A JQL expression. "
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object",
              "properties": {
                "expand": {
                  "type": "string"
                },
                "startAt": {
                  "type": "integer"
                },
                "maxResults": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                },
                "issues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "expand": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "self": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "object",
                        "properties": {
                          "summary": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the JQL query is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "SearchRequestBean": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "description": "A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:\n\n *  `*all` Returns all fields.\n *  `*navigable` Returns navigable fields.\n *  Any issue field, prefixed with a minus to exclude.\n\nThe default is `*navigable`.\n\nExamples:\n\n *  `summary,comment` Returns the summary and comments fields only.\n *  `-description` Returns all navigable (default) fields except description.\n *  `*all,-comment` Returns all fields except comments.\n\nMultiple `fields` parameters can be included in a request.\n\nNote: All navigable fields are returned by default. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields.",
          "items": {
            "type": "string"
          }
        },
        "jql": {
          "type": "string",
          "description": "A JQL expression."
        }
      }
    },
    "SearchResults": {
      "type": "object",
      "properties": {
        "expand": {
          "type": "string"
        },
        "startAt": {
          "type": "integer"
        },
        "maxResults": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        },
        "issues": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "expand": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "self": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "fields": {
                "type": "object",
                "properties": {
                  "summary": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "FullIssue": {
      "type": "object",
      "x-ms-summary": "Issue",
      "properties": {
        "id": {
          "description": "Unique id of the issue.",
          "type": "string",
          "x-ms-summary": "Issue Id",
          "x-ms-visibility": "advanced"
        },
        "key": {
          "description": "Unique key of the issue.",
          "type": "string",
          "x-ms-summary": "Issue Key",
          "x-ms-visibility": "advanced"
        },
        "fields": {
          "type": "object",
          "properties": {
            "summary": {
              "type": "string",
              "x-ms-summary": "Summary",
              "description": "Title of the issue.",
              "x-ms-visibility": "important"
            }
          }
        }
      }
    },
    "CreateIssueRequest": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "object",
          "properties": {
            "issuetype": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "x-ms-summary": "Issue Type",
                  "description": "Issue type"
                }
              }
            },
            "summary": {
              "type": "string",
              "x-ms-summary": "Summary",
              "description": "Brief description of the issue."
            },
            "project": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "x-ms-summary": "Project name of the issue",
                  "description": "Project name"
                }
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "basic"
    }
  }
}
